#summary TechnicalDebt: Technical features deferred to get demonstrable user functionality

= Introduction =

I am noticing that many intended technical features are being deferred in order to push towards user-identified and demonstrable functionality.  In some cases, the technical features may never be implemented;  in others, they will probably resurface as future user requirements are tackled.

= Deferred features =

 * Using RDF for stored card data.  For now, JSON is just very much quicker and easier.  Maybe, will even use back-end service to deliver RDF?
 * CSV import as a collection of cards;  instead use a single card.  Problem here was that with multiple cards, it was not clear what to do on reload.  Later, may provide facility to pull out individual rows as separate cards.
 * File browsing interface:  the file input widget won't return the full file path, and eXist service document does not list available feeds.  May want instead to keep a record of a user's recent activities ad allow pick from that.
 * Card linking drag-and-drop, intended for linking file selector to data, and data to graph.  At this stage, it was simply quicker to use an editable area on the target card to get the required information in place. Need to investigate using draggable/droppable for setting up card interactions.
 * Getting visual linking indication (e.g. line between cards) requires disproportionate effort for this stage (e.g. drawing "rubberband" lines on workspace.  Have done a little spike code with a jQuery SVG plugin, but more effort is required. For now, cards are stand-alone.
 * On-the-fly saving of card changes.  I think the backend framework needs to be reviewed (maybe also supporting WebDAV) before this is really practical.
 * Alternative card views (1-line, icon, etc.)  Not needed yet.